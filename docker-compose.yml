services:
  postgres:
    container_name: postgres-produits
    image: postgres
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data
      POSTGRES_DB: produit_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - gestion-produits
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U username -d scolaire-db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:8
    volumes:
      - ./volume-data/mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password
    networks:
      - gestion-produits

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:24.0.1
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8181:8080"
    volumes:
      - ./docker/keycloak/realms/:/opt/keycloak/data/import/
    networks:
      - gestion-produits
    depends_on:
      - keycloak-mysql
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8181/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  product-api:
    image: product-api
    ports:
      - "8083:8083"
    environment:
      - DB_HOST=postgres-produits
      - DB_PORT=5432
      - DB_NAME=produit_db
      - DB_USERNAME=username
      - DB_PASSWORD=password
    depends_on:
      - postgres
    networks:
      - gestion-produits
  ###
  product-front:
    image: product-front
    ports:
      - "4200:80"
    environment:
      - KEYCLOAK_URL=http://keycloak:8181
      - KEYCLOAK_REALM=gestion-produits
      - KEYCLOAK_CLIENT_ID=gestions-produits-app
    networks:
      - gestion-produits
    depends_on:
      - product-api
      - keycloak



networks:
  gestion-produits:
    driver: bridge

volumes:
  postgres_data:
    driver: local

